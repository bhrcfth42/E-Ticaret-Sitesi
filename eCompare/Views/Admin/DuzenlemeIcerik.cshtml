@model eCompare.Models.Urun

@{
    Layout = null;
    if (Session["kullanici_id"] == null)
    {
        Response.Redirect("~/Home/Giris");
    }
    else if ((int)Session["kullanici_id"] != Model.kullanici_id)
    {
        Response.Redirect("Logout");
    }
}


@using (Html.BeginForm("DuzenlemeIcerik", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ürün Düzenleme</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.adi, "Ürün Adi", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.adi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.adi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.detay, "Ürün Açıklaması", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.detay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.detay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fiyat, "Ürün Fiyatı", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fiyat, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0" } })
                @Html.ValidationMessageFor(model => model.fiyat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.stok, "Ürün Stok Sayısı", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.stok, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0" } })
                @Html.ValidationMessageFor(model => model.stok, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.video_id, "Video", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.Video != null)
                {
                    <video controls width="150">
                        <source src="@Model.Video.yol" />
                    </video>
                    <br /><br />
                }
                <input type="file" name="video" value="" class="btn btn-lg btn-outline-info" accept="video/*"/>
                @Html.ValidationMessageFor(model => model.video_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.resim_id, "Resim", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="@Model.Resim.yol" alt="@Model.adi" width="150" height="150" class="img-fluid" />
                <br /><br />
                <input type="file" name="resim" value="" class="btn btn-lg btn-outline-info" multiple accept="image/*"/>
                @Html.ValidationMessageFor(model => model.resim_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kategori_id, "Kategori", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("kategori_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.kategori_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.beden_id, "Beden", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("beden_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.beden_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.renk_id, "Renk", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("renk_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.renk_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Ürün Güncelle" class="btn btn-lg btn-outline-warning">
            </div>
        </div>
    </div>
}
